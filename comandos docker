Imagens docker -> https://hub.docker.com

Linha de Comando do Docker -> https://docs.docker.com/engine/reference/commandline/docker/

Mostrar a versão do docker instalado -> docker version

Mostrar os containers que estão sendo executados no momento -> docker ps ou docker container ls

Rodando um container -> docker run imagem_docker

Rodando um container em modo iterativo (esse modo libera um terminal para o usuário
navegar dentro dos diretórios do container como num sistema operacional linux normal e mantem o container em execução) -> docker run -it imagem_docker (-it = iteration)

Mostrando os containers que estão e já foram executatos -> docker ps -a (-a = all)

Quando rodamos um container, ele ocupa o terminal, então para executar um container e
deixar o terminal livre, ou seja, rodando em background -> docker run -d imagem_docker
(-d = detached)

Containers docker não tem conexão externa, logo temos que expor as portas do container
para nossa máquina -> docker run -d -p 3000:80 imagem_docker (-p = port / porta_externa:porta_docker)

Parando containers -> docker stop nome_ou_id_do_container

Para voltar a utilizar um container que já usou o stop, que pode ser visto no comando
docker ps -a, podemos utilizar o comando -> docker start nome_ou_id_do_container

Criando um container nomeado. Para nomear o container, já que ele gera uns nomes estranhos para o container, aí fica difícil de decorar os nomes, vc nomeia o container para ficar mais fácil de utilizar com os comandos stop, start ou qualquer que seja -> docker run -d -p 80:80 --name nome_que_vc_quer_dar_ao_container nome_da_imagem

Ver os logs no docker -> docker logs nome_ou_id_do_container

Remover um container parado -> docker rm nome_ou_id_do_container

Forçar a parada de um container em execução e removê-lo -> docker rm -f nome_ou_id_do_container (-f = force)

Nome de criação do arquivo docker para configurações da imagem, é convencionado o nome "Dockerfile"

Comandos básicos na criação do arquivo Dockerfile (https://docs.docker.com/engine/reference/builder/): FROM -> utilização de uma imagem base / WORKDIR -> onde ficará o diretório de trabalho com os arquivos da aplicação / EXPOSE -> expor qual porta será utilizada pelo docker para utilizar a aplicação / COPY -> copiar arquivos entre os diretórios da aplicação para o WORKDIR / RUN -> executa um comando no terminal / CMD -> inicia a aplicação (o comando CMD funciona em formato de vetor, em que cada elemento desse vetor separado por "," executa um comando).
